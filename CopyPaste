===========================QUERY Constant
package com.rishabh.main.util;

public class QueryConstants {

    public static final String GET_USER_DETAILS = "Select u.USER_ID AS U_userId, u.USERNAME AS U_userName, u.PASSWORD_HASH AS U_passwordHash,u.EMAIL AS U_email,u.FULL_NAME AS U_fullName,u.BIO AS U_bio,u.AVATAR_URL AS U_avatarUrl, u.CREATED_AT AS U_createdAt from user_details u WHERE u.USER_ID = ?";
    public static final String GET_PROJECT_DETAILS = "SELECT p.PROJECT_ID AS P_projectID,p.USER_ID AS P_userID,p.TITLE AS P_title,p.START_DATE AS P_startDate,p.CREATED_AT AS P_createdAt,p.END_DATE AS P_endDate,p.DESCRIPTION AS P_description,p.UPDATED_AT AS P_updatedAt,p.URL AS P_url,u.USER_ID AS U_userId,u.USERNAME AS U_userName,u.PASSWORD_HASH AS U_passwordHash,u.EMAIL AS U_email,u.FULL_NAME AS U_fullName,u.BIO AS U_bio, u.AVATAR_URL AS U_avatarUrl,u.CREATED_AT AS U_createdAt FROM Project p INNER JOIN User_details u ON p.USER_ID = u.USER_ID WHERE p.USER_ID = ?";

}



==========================ProjectRepoImpl 
@Repository
public class ProjectRepoImpl implements ProjectRepoInterface{
    
    @Autowired
    private JdbcTemplate jdbcTemplate;

    @Override
    public List<Project> getAllProject(int userId) {
        
        System.out.println("-----------");
         List<Project> projects = jdbcTemplate.query(QueryConstants.GET_PROJECT_DETAILS, BeanPropertyRowMapper.newInstance(Project.class), userId);
         
         for(Project project : projects) {
             
             UserDetails userDetails = new UserDetails();
             userDetails= jdbcTemplate.queryForObject(QueryConstants.GET_USER_DETAILS, BeanPropertyRowMapper.newInstance(UserDetails.class), project.getP_userID());
             
             project.setUserDetails(userDetails);
             
         }
         
         return projects;
    
    }

}
